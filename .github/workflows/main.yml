name: Databricks-CI-CD


on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  
  workflow_dispatch:
    inputs:
      # This is the path of your notebooks in Git.  Currently, this is not recursively deploying notebooks
      GIT_NOTEBOOK_PATH:
        description: 'Notebooks Relative Path in Git'
        required: true
        default: 'notebooks/MyProject'

      # This is where in your Databricks workspace your notebooks will be deployed
      # Typically this is under a Folder under the Workspace and not under a specific user's folder
      NOTEBOOK_DEPLOYMENT_PATH:
        description: 'Notebooks Deployment Path to Databricks'
        required: true
        default: '/MyProject'

#       # This resource group for the Databricks workspace and KeyVault
      RESOURCE_GROUP:
        description: 'Resource Group Name'
        required: true
        default: 'Demo-ADB'

      # The Azure region to which to deploy your resources
      LOCATION:
        description: 'Azure Region'
        required: true
        default: 'EastUS2'

      # This is the name of your Azure Databricks resource
      WORKSPACE_NAME:
        description: 'Databricks workspace name'
        required: true
        default: 'gsdemoadb'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      KEY_VAULT_NAME:
        description: 'KeyVault name'
        required: true
        default: 'gsdemokv'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      SUBSCRIPTION_ID:
        description: 'Azure Subscription Id'
        required: true
        default: ${{ secrets.clientId }}




jobs:
  #############################################################
  # Builds the code
  # Currently this is not building and JAR files, but you would do that here
  # This is packaging up the files from Git to the Artifacts files
  #############################################################
  Build:
    runs-on: ubuntu-latest

    # Checkout code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'

   
    # Publish Artifact: Databricks-Notebooks
    - name: 'Publish Artifact: Databricks-Notebooks' 
      uses: actions/upload-artifact@v2
      with:
        name: 'notebooks'
        path: '${{ github.workspace }}/notebooks'


    # Publish Artifact: Databricks-Deployment-Scripts
    - name: 'Publish Artifact: Databricks-Deployment-Scripts' 
      uses: actions/upload-artifact@v2
      with:
        name: 'deployment-scripts'
        path: '${{ github.workspace }}/deployment-scripts'                                


#############################################################
# Deploy to Dev
#############################################################
  Dev:
    needs: Build
    runs-on: ubuntu-latest
    env:
      resourceGroupName: 'Demo-ADB'
      databricksWorkspaceName: 'gsdemoadb'
      keyVaultName: 'gsdemokv'
      NotebookDeploymentPath: '/MyProject'
      GitNotebookPath: 'notebooks/MyProject'
      databricks-dev-ops-tenant-id: '${{ secrets.tenantId }}'
      databricks-dev-ops-client-id: '${{ secrets.clientId }}'

    steps:
    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'        


    # Download Artifact: Databricks-Notebooks
    - name: 'Download Artifact: Databricks-Notebooks' 
      uses: actions/download-artifact@v2
      with:
        name: 'notebooks'
        path: ${{ github.workspace }}/notebooks

 
    # Download Artifact: Deployment Scripts
    - name: 'Download Artifact: Deployment Scripts' 
      uses: actions/download-artifact@v2
      with:
        name: 'deployment-scripts'
        path: ${{ github.workspace }}/deployment-scripts
        
    # Login to Azure
#     - name: Login via Az module
#       uses: azure/login@v1
#       with:
#         creds: '${{ secrets.AZURE_CREDENTIALS }}'
#         # set this if you will be using PowerShell
#         # enable-AzPSSession: true 

#     - name: Log in with Azure
#       uses: azure/login@v1
#       with:
#           creds: '{"clientId":"${{ secrets.clientId }}","clientSecret":"${{ secrets.clientSecret }}","subscriptionId":"${{ secrets.subscriptionId }}","tenantId":"${{ secrets.tenantId }}"}'

#     # Download KeyVault Secrets
#     - name: Download KeyVault Secrets
#       uses: Azure/get-keyvault-secrets@v1.0
#       env:
#         ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
#       #if: ${{ github.event.inputs.MODE == 'Databricks' }}
#       with:
#         keyvault: 'gsdemokv'
#         secrets: 'databricks-dev-ops-subscription-id,databricks-dev-ops-tenant-id,databricks-dev-ops-client-id,databricks-dev-ops-client-secret,databricks-Token,databricks-url'
#       id: databricksSecretAction
      
    # Deploy Databricks Notebooks
    - name: Deploy Databricks Notebooks
      #if: ${{ github.event.inputs.MODE == 'Databricks' }}
      run: |
        cd "$GITHUB_WORKSPACE/notebooks/MyProject"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh ${{env.databricks-dev-ops-tenant-secret }} ${{env.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ env.NotebookDeploymentPath }}
 
