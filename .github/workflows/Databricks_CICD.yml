name: Databricks-CI-CD

# Manual trigger with parameters

on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    # branches: [ main ]
#  pull_request:
#    branches: [ main ]
  workflow_dispatch:
    inputs:
      # This is the path of your notebooks in Git.
      # For specific folder : mention the folder name or leave it as "notebooks/" for multiple folders
      GIT_NOTEBOOK_PATH:
        description: 'Notebooks Relative Path in Git '
        required: true
        default: 'notebooks/MyProject'

      # This is where in your Databricks workspace your notebooks will be deployed
      # Typically this is under a Folder under the Workspace and not under a specific user's folder
      # For specific folder : mention the folder name or leave it as "/" for multiple folders deployment
      NOTEBOOK_DEPLOYMENT_PATH:
        description: 'Notebooks Deployment Path to Databricks'
        required: true
        default: '/MyProject'

     # This resource group for the Databricks workspace and KeyVault
      RESOURCE_GROUP:
        description: 'Resource Group Name'
        required: true
        default: 'Demo-ADB'

      # The Azure region to which to deploy your resources
      LOCATION:
        description: 'Azure Region'
        required: true
        default: 'EastUS2'

      # This is the name of your Azure Databricks resource
      WORKSPACE_NAME:
        description: 'Databricks workspace name'
        required: true
        default: 'gsdemoadb'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      KEY_VAULT_NAME:
        description: 'KeyVault name'
        required: true
        default: 'gsdemokv'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      SUBSCRIPTION_ID:
        description: 'Azure Subscription Id'
        required: true
        default: ''

jobs:
  #############################################################
  # Builds the code
  # Currently this is not building and JAR files, but you would do that here
  # This is packaging up the files from Git to the Artifacts files
  #############################################################
  Build:
    runs-on: ubuntu-latest

    # Checkout code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'

    # Publish Artifact: Databricks-Clusters
    - name: 'Publish Artifact: Databricks-Clusters' 
      uses: actions/upload-artifact@v2
      with:
        name: 'clusters'
        path: '${{ github.workspace }}/clusters'

    # Publish Artifact: Databricks-Notebooks
    - name: 'Publish Artifact: Databricks-Notebooks' 
      uses: actions/upload-artifact@v2
      with:
        name: 'notebooks'
        path: '${{ github.workspace }}/notebooks'

    # Publish Artifact: Databricks-Jobs
    - name: 'Publish Artifact: Databricks-Jobs' 
      uses: actions/upload-artifact@v2
      with:
        name: 'jobs'
        path: '${{ github.workspace }}/jobs'

    # Publish Artifact: Databricks-Pools
    - name: 'Publish Artifact: Databricks-Pools' 
      uses: actions/upload-artifact@v2
      with:
        name: 'pools'
        path: '${{ github.workspace }}/pools'        

    # Publish Artifact: Databricks-Deployment-Scripts
    - name: 'Publish Artifact: Databricks-Deployment-Scripts' 
      uses: actions/upload-artifact@v2
      with:
        name: 'deployment-scripts'
        path: '${{ github.workspace }}/deployment-scripts'                                


#############################################################
# Deploy to Dev
#############################################################
  Dev:
    needs: Build
    runs-on: ubuntu-latest
    env:
      resourceGroupName: 'Demo-ADB'
      databricksWorkspaceName: 'ABD_Demo_Dev'
      keyVaultName: 'gsdemokv'
      NotebookDeploymentPath: '/'
      GitNotebookPath: 'notebooks/'

    steps:
    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'        

    # Download Artifact: Databricks-Clusters
    - name: 'Download Artifact: Databricks-Clusters' 
      uses: actions/download-artifact@v2
      with:
        name: 'clusters'
        path: ${{ github.workspace }}/clusters

    # Download Artifact: Databricks-Notebooks
    - name: 'Download Artifact: Databricks-Notebooks' 
      uses: actions/download-artifact@v2
      with:
        name: 'notebooks'
        path: ${{ github.workspace }}/notebooks

    # Download Artifact: Databricks-Jobs
    - name: 'Download Artifact: Databricks-Jobs' 
      uses: actions/download-artifact@v2
      with:
        name: 'jobs'
        path: ${{ github.workspace }}/jobs

    # Download Artifact: Databricks-Pools
    - name: 'Download Artifact: Databricks-Pools' 
      uses: actions/download-artifact@v2
      with:
        name: 'pools'
        path: ${{ github.workspace }}/pools

    # Download Artifact: Deployment Scripts
    - name: 'Download Artifact: Deployment Scripts' 
      uses: actions/download-artifact@v2
      with:
        name: 'deployment-scripts'
        path: ${{ github.workspace }}/deployment-scripts
        
#     # Login to Azure
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        # set this if you will be using PowerShell
        # enable-AzPSSession: true 
      
    # Download KeyVault Secrets
    - name: Download KeyVault Secrets
      uses: Azure/get-keyvault-secrets@v1.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      with:
        keyvault: ${{ env.keyVaultName }}
        secrets: 'databricks-dev-ops-subscription-id,databricks-dev-ops-tenant-id,databricks-dev-ops-client-id,databricks-dev-ops-client-secret,databricks-Token,databricks-url'
      id: databricksSecretAction

    # Deploy Databricks Clusters
    - name: Deploy Databricks Clusters
      run: |
        cd "$GITHUB_WORKSPACE/clusters"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-clusters.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-clusters.sh ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ steps.databricksSecretAction.outputs.databricks-Token }} ${{ steps.databricksSecretAction.outputs.databricks-url }}

    # Deploy Databricks Notebooks
    - name: Deploy Databricks Notebooks
      run: |
        cd "$GITHUB_WORKSPACE/notebooks/"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ env.NotebookDeploymentPath }} ${{ steps.databricksSecretAction.outputs.databricks-Token }} ${{ steps.databricksSecretAction.outputs.databricks-url }}
        
    # Deploy Databricks Jobs
    - name: Deploy Databricks Jobs
      run: |
        cd "$GITHUB_WORKSPACE/jobs"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-jobs.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-jobs.sh ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ steps.databricksSecretAction.outputs.databricks-Token }} ${{ steps.databricksSecretAction.outputs.databricks-url }}

    # Deploy Databricks Pools
    - name: Deploy Databricks Pools
      run: |
        cd "$GITHUB_WORKSPACE/pools"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-pools.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-pools.sh ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ steps.databricksSecretAction.outputs.databricks-Token }} ${{ steps.databricksSecretAction.outputs.databricks-url }}

#############################################################
# Deploy to QA
#############################################################
  QA:
    needs: Dev
    runs-on: ubuntu-latest
    environment:
        name: Build
    env:
      resourceGroupName: 'Demo-ADB'
      databricksWorkspaceName: 'gsdemoadb'
      keyVaultName: 'gsdemokv'
      NotebookDeploymentPath: '/'
      GitNotebookPath: 'notebooks/'
      
    steps:
    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'        

    # Download Artifact: Databricks-Clusters
    - name: 'Download Artifact: Databricks-Clusters' 
      uses: actions/download-artifact@v2
      with:
        name: 'clusters'
        path: ${{ github.workspace }}/clusters

    # Download Artifact: Databricks-Notebooks
    - name: 'Download Artifact: Databricks-Notebooks' 
      uses: actions/download-artifact@v2
      with:
        name: 'notebooks'
        path: ${{ github.workspace }}/notebooks

    # Download Artifact: Databricks-Jobs
    - name: 'Download Artifact: Databricks-Jobs' 
      uses: actions/download-artifact@v2
      with:
        name: 'jobs'
        path: ${{ github.workspace }}/jobs

    # Download Artifact: Deployment Scripts
    - name: 'Download Artifact: Deployment Scripts' 
      uses: actions/download-artifact@v2
      with:
        name: 'deployment-scripts'
        path: ${{ github.workspace }}/deployment-scripts
        
    # Login to Azure
    - name: Login via Az module
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        # set this if you will be using PowerShell
        # enable-AzPSSession: true 

    # Download KeyVault Secrets
    - name: Download KeyVault Secrets
      uses: Azure/get-keyvault-secrets@v1.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      #if: ${{ github.event.inputs.MODE == 'Databricks' }}
      with:
        keyvault: ${{ env.keyVaultName }}
        secrets: 'databricks-dev-ops-subscription-id,databricks-dev-ops-tenant-id,databricks-dev-ops-client-id,databricks-dev-ops-client-secret,databricks-Token-QA,databricks-url-QA'
      id: databricksSecretAction

    # Deploy Databricks Clusters
    - name: Deploy Databricks Clusters
      #if: ${{ github.event.inputs.MODE == 'Databricks' }}
      run: |
        cd "$GITHUB_WORKSPACE/clusters"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-clusters.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-clusters.sh ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ steps.databricksSecretAction.outputs.databricks-Token-QA }} ${{ steps.databricksSecretAction.outputs.databricks-url-QA }}

    # Deploy Databricks Notebooks
    - name: Deploy Databricks Notebooks
      #if: ${{ github.event.inputs.MODE == 'Databricks' }}
      run: |
        cd "$GITHUB_WORKSPACE/notebooks/"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ env.NotebookDeploymentPath }} ${{ steps.databricksSecretAction.outputs.databricks-Token-QA }} ${{ steps.databricksSecretAction.outputs.databricks-url-QA }}

    # Deploy Databricks Jobs
    - name: Deploy Databricks Jobs
      #if: ${{ github.event.inputs.MODE == 'Databricks' }}
      run: |
        cd "$GITHUB_WORKSPACE/jobs"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-jobs.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-jobs.sh ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ steps.databricksSecretAction.outputs.databricks-Token-QA }} ${{ steps.databricksSecretAction.outputs.databricks-url-QA }}

# #############################################################
# # Deploy to Prod
# #############################################################
  Prod:
    needs: Build
    runs-on: ubuntu-latest
    environment:
        name: Prod
    env:
      resourceGroupName: 'Demo-ADB-Prod'
      databricksWorkspaceName: 'gsdemoadbProd'
      keyVaultName: 'gsdemokvProd'
      NotebookDeploymentPath: '/'
      GitNotebookPath: 'notebooks/'  

    steps:
    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'        

    # Download Artifact: Databricks-Clusters
    - name: 'Download Artifact: Databricks-Clusters' 
      uses: actions/download-artifact@v2
      with:
        name: 'clusters'
        path: ${{ github.workspace }}/clusters

    # Download Artifact: Databricks-Notebooks
    - name: 'Download Artifact: Databricks-Notebooks' 
      uses: actions/download-artifact@v2
      with:
        name: 'notebooks'
        path: ${{ github.workspace }}/notebooks

    # Download Artifact: Databricks-Jobs
    - name: 'Download Artifact: Databricks-Jobs' 
      uses: actions/download-artifact@v2
      with:
        name: 'jobs'
        path: ${{ github.workspace }}/jobs

    # Download Artifact: Deployment Scripts
    - name: 'Download Artifact: Deployment Scripts' 
      uses: actions/download-artifact@v2
      with:
        name: 'deployment-scripts'
        path: ${{ github.workspace }}/deployment-scripts
        
    # Login to Azure
    - name: Login via Az module
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

    # Download KeyVault Secrets
    - name: Download KeyVault Secrets
      uses: Azure/get-keyvault-secrets@v1.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      #if: ${{ github.event.inputs.MODE == 'Databricks' }}
      with:
        keyvault: ${{ env.keyVaultName }}
        secrets: 'databricks-CICD-subscription-id,databricks-CICD-tenant-id,databricks-CICD-client-id,databricks-CICD-client-secret,databricks-CICD-Token,databricks-CICD-url'
      id: databricksSecretAction

    # Deploy Databricks Clusters
    - name: Deploy Databricks Clusters
      run: |
        cd "$GITHUB_WORKSPACE/clusters"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-clusters.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-clusters.sh ${{ steps.databricksSecretAction.outputs.databricks-CICD-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-Token }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-url }}
        
    # Deploy Databricks Notebooks
    - name: Deploy Databricks Notebooks
      run: |
        cd "$GITHUB_WORKSPACE/notebooks/"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-notebooks.sh ${{ steps.databricksSecretAction.outputs.databricks-CICD-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ env.NotebookDeploymentPath }} ${{ steps.databricksSecretAction.outputs.databricks-Token }} ${{ steps.databricksSecretAction.outputs.databricks-url }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-Token }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-url }}
        
    # Deploy Databricks Jobs
    - name: Deploy Databricks Jobs
      run: |
        cd "$GITHUB_WORKSPACE/jobs"
        chmod +x $GITHUB_WORKSPACE/deployment-scripts/deploy-jobs.sh
        $GITHUB_WORKSPACE/deployment-scripts/deploy-jobs.sh ${{ steps.databricksSecretAction.outputs.databricks-CICD-tenant-id }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-client-id }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-client-secret }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-subscription-id }} ${{ env.resourceGroupName }} ${{ env.databricksWorkspaceName }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-Token }} ${{ steps.databricksSecretAction.outputs.databricks-CICD-url }}
